$date
	Thu Nov 21 01:43:19 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module AndBit_tb $end
$var wire 8 ! s [7:0] $end
$var reg 1 " EN $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$scope module uut $end
$var wire 1 " EN $end
$var wire 8 % a [7:0] $end
$var wire 8 & b [7:0] $end
$var wire 8 ' w [7:0] $end
$var wire 8 ( s [7:0] $end
$scope module u1 $end
$var wire 8 ) a [7:0] $end
$var wire 8 * b [7:0] $end
$var wire 8 + s [7:0] $end
$scope module u1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 . s $end
$upscope $end
$scope module u2 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 s $end
$upscope $end
$scope module u3 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 s $end
$upscope $end
$scope module u4 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 s $end
$upscope $end
$scope module u5 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : s $end
$upscope $end
$scope module u6 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = s $end
$upscope $end
$scope module u7 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ s $end
$upscope $end
$scope module u8 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C s $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 1 " EN $end
$var wire 8 D a [7:0] $end
$var reg 8 E s [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx E
bx D
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
x"
bx !
$end
#10
b10100 !
b10100 (
b10100 E
0.
01
14
07
1:
0=
0@
b10100 '
b10100 +
b10100 D
0C
0-
00
13
06
19
0<
0?
1B
1,
0/
12
05
18
1;
0>
0A
b10010100 $
b10010100 &
b10010100 *
b110101 #
b110101 %
b110101 )
1"
#30
b11100001 !
b11100001 (
b11100001 E
1.
1=
04
0:
1@
b11100001 '
b11100001 +
b11100001 D
1C
1-
03
09
1<
1?
02
08
1>
1A
b11100001 $
b11100001 &
b11100001 *
b11100001 #
b11100001 %
b11100001 )
#50
